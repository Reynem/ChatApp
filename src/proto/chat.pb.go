// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v6.32.0
// source: src/proto/chat.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ChatMessageText struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Text          string                 `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatMessageText) Reset() {
	*x = ChatMessageText{}
	mi := &file_src_proto_chat_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatMessageText) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessageText) ProtoMessage() {}

func (x *ChatMessageText) ProtoReflect() protoreflect.Message {
	mi := &file_src_proto_chat_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessageText.ProtoReflect.Descriptor instead.
func (*ChatMessageText) Descriptor() ([]byte, []int) {
	return file_src_proto_chat_proto_rawDescGZIP(), []int{0}
}

func (x *ChatMessageText) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type ChatMessageAudio struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Audio         []byte                 `protobuf:"bytes,1,opt,name=audio,proto3" json:"audio,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatMessageAudio) Reset() {
	*x = ChatMessageAudio{}
	mi := &file_src_proto_chat_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatMessageAudio) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessageAudio) ProtoMessage() {}

func (x *ChatMessageAudio) ProtoReflect() protoreflect.Message {
	mi := &file_src_proto_chat_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessageAudio.ProtoReflect.Descriptor instead.
func (*ChatMessageAudio) Descriptor() ([]byte, []int) {
	return file_src_proto_chat_proto_rawDescGZIP(), []int{1}
}

func (x *ChatMessageAudio) GetAudio() []byte {
	if x != nil {
		return x.Audio
	}
	return nil
}

type ChatResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ResponseText  string                 `protobuf:"bytes,1,opt,name=response_text,json=responseText,proto3" json:"response_text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatResponse) Reset() {
	*x = ChatResponse{}
	mi := &file_src_proto_chat_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatResponse) ProtoMessage() {}

func (x *ChatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_proto_chat_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatResponse.ProtoReflect.Descriptor instead.
func (*ChatResponse) Descriptor() ([]byte, []int) {
	return file_src_proto_chat_proto_rawDescGZIP(), []int{2}
}

func (x *ChatResponse) GetResponseText() string {
	if x != nil {
		return x.ResponseText
	}
	return ""
}

type ChatAck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatAck) Reset() {
	*x = ChatAck{}
	mi := &file_src_proto_chat_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatAck) ProtoMessage() {}

func (x *ChatAck) ProtoReflect() protoreflect.Message {
	mi := &file_src_proto_chat_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatAck.ProtoReflect.Descriptor instead.
func (*ChatAck) Descriptor() ([]byte, []int) {
	return file_src_proto_chat_proto_rawDescGZIP(), []int{3}
}

func (x *ChatAck) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_src_proto_chat_proto protoreflect.FileDescriptor

const file_src_proto_chat_proto_rawDesc = "" +
	"\n" +
	"\x14src/proto/chat.proto\x12\valexchatapp\"%\n" +
	"\x0fChatMessageText\x12\x12\n" +
	"\x04text\x18\x01 \x01(\tR\x04text\"(\n" +
	"\x10ChatMessageAudio\x12\x14\n" +
	"\x05audio\x18\x01 \x01(\fR\x05audio\"3\n" +
	"\fChatResponse\x12#\n" +
	"\rresponse_text\x18\x01 \x01(\tR\fresponseText\"#\n" +
	"\aChatAck\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess2\xa2\x01\n" +
	"\vChatService\x12J\n" +
	"\x0fProcessChatText\x12\x1c.alexchatapp.ChatMessageText\x1a\x19.alexchatapp.ChatResponse\x12G\n" +
	"\x10ProcessChatAudio\x12\x1d.alexchatapp.ChatMessageAudio\x1a\x14.alexchatapp.ChatAckB\x19Z\x17alexchatapp/proto;protob\x06proto3"

var (
	file_src_proto_chat_proto_rawDescOnce sync.Once
	file_src_proto_chat_proto_rawDescData []byte
)

func file_src_proto_chat_proto_rawDescGZIP() []byte {
	file_src_proto_chat_proto_rawDescOnce.Do(func() {
		file_src_proto_chat_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_src_proto_chat_proto_rawDesc), len(file_src_proto_chat_proto_rawDesc)))
	})
	return file_src_proto_chat_proto_rawDescData
}

var file_src_proto_chat_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_src_proto_chat_proto_goTypes = []any{
	(*ChatMessageText)(nil),  // 0: alexchatapp.ChatMessageText
	(*ChatMessageAudio)(nil), // 1: alexchatapp.ChatMessageAudio
	(*ChatResponse)(nil),     // 2: alexchatapp.ChatResponse
	(*ChatAck)(nil),          // 3: alexchatapp.ChatAck
}
var file_src_proto_chat_proto_depIdxs = []int32{
	0, // 0: alexchatapp.ChatService.ProcessChatText:input_type -> alexchatapp.ChatMessageText
	1, // 1: alexchatapp.ChatService.ProcessChatAudio:input_type -> alexchatapp.ChatMessageAudio
	2, // 2: alexchatapp.ChatService.ProcessChatText:output_type -> alexchatapp.ChatResponse
	3, // 3: alexchatapp.ChatService.ProcessChatAudio:output_type -> alexchatapp.ChatAck
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_src_proto_chat_proto_init() }
func file_src_proto_chat_proto_init() {
	if File_src_proto_chat_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_src_proto_chat_proto_rawDesc), len(file_src_proto_chat_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_src_proto_chat_proto_goTypes,
		DependencyIndexes: file_src_proto_chat_proto_depIdxs,
		MessageInfos:      file_src_proto_chat_proto_msgTypes,
	}.Build()
	File_src_proto_chat_proto = out.File
	file_src_proto_chat_proto_goTypes = nil
	file_src_proto_chat_proto_depIdxs = nil
}
